#!/usr/bin/env node

const { spawn } = require('child_process');

console.log('üé¨ Testing Video Modal Functionality\n');

console.log('üìã New Features:');
console.log('  ‚úÖ Created VideoModal component for popup video playback');
console.log('  ‚úÖ Updated VideoList to use modal instead of navigation');
console.log('  ‚úÖ Fixed VideoPlayer Play button functionality');
console.log('  ‚úÖ Added proper YouTube embed URLs with autoplay');
console.log('  ‚úÖ Added keyboard support (Escape to close modal)');
console.log('  ‚úÖ Added backdrop click to close modal');

console.log('\nüöÄ Starting development server...\n');

// ÂêØÂä®ÂºÄÂèëÊúçÂä°Âô®
const server = spawn('npm', ['run', 'dev'], {
  stdio: 'pipe',
  shell: true
});

let serverReady = false;

server.stdout.on('data', (data) => {
  const output = data.toString();
  console.log(output);
  
  if (output.includes('Ready') || output.includes('localhost:3000')) {
    serverReady = true;
    console.log('\nüéâ Development server is ready!');
    console.log('\nüîó Test URL: http://localhost:3000/videos');
    
    console.log('\nüìã Test the following features:');
    console.log('  1. ‚úÖ Click any video in the list');
    console.log('  2. ‚úÖ Modal should open with video thumbnail');
    console.log('  3. ‚úÖ Click the play button in modal');
    console.log('  4. ‚úÖ YouTube video should start playing');
    console.log('  5. ‚úÖ Press Escape or click backdrop to close');
    console.log('  6. ‚úÖ Click "Watch on YouTube" for external link');
    
    console.log('\nüí° Expected behavior:');
    console.log('  - Videos open in popup modal, not new page');
    console.log('  - Play button works and starts YouTube video');
    console.log('  - Modal can be closed with Escape or backdrop click');
    console.log('  - Video info and tags are displayed in modal');
    
    console.log('\n‚å®Ô∏è  Press Ctrl+C to stop the server');
  }
});

server.stderr.on('data', (data) => {
  const error = data.toString();
  if (!error.includes('warn') && !error.includes('Warning')) {
    console.error('‚ùå Error:', error);
  }
});

// Ê∏ÖÁêÜÂáΩÊï∞
process.on('SIGINT', () => {
  console.log('\nüõë Stopping development server...');
  server.kill();
  process.exit(0);
});

setTimeout(() => {
  if (!serverReady) {
    console.log('‚ö†Ô∏è  Server taking longer than expected to start...');
    console.log('   This might be normal for the first run.');
  }
}, 15000);